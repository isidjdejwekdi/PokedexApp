<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".presenter.MainActivity">

    <com.google.android.material.appbar.MaterialToolbar
        android:id="@+id/toolbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:background="@color/color_primary"
        app:title="@string/app_name"
        app:titleTextColor="@color/white"
        app:navigationIconTint="@color/white"
        android:elevation="10dp"
        android:theme="@style/ThemeOverlay.AppCompat.ActionBar"
        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"

        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        />

    <androidx.fragment.app.FragmentContainerView
        android:id="@+id/navHost_fragment_container"
        android:name="androidx.navigation.fragment.NavHostFragment"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:navGraph="@navigation/my_nav"
        app:defaultNavHost="true"

        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/toolbar"
         />

    <!--app:defaultNavHost="true"

    The app:defaultNavHost="true" attribute ensures that your
    NavHostFragment intercepts the system Back button.
    Note that only one NavHost can be the default. If you have
    multiple hosts in the same layout (two-pane layouts, for example),
    be sure to specify only one default NavHost.-->

</androidx.constraintlayout.widget.ConstraintLayout>